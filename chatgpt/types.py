"""Types used by ChatGPT."""

import re
from abc import ABC, abstractmethod
from enum import Enum

from database import Serializable


class ChatMessageRole(Enum):
    """The possible roles of the sender of a message."""

    USER = "user"
    SYSTEM = "system"

    @property
    @classmethod
    def values(cls):
        """The values of the the message roles."""
        return list(map(lambda c: c.value, cls))


class ReplyRole(Enum):
    """The role of the reply."""

    CHATGPT = "assistant"


class FunctionResultRole(Enum):
    """The role of a function results message."""

    FUNCTION = "function"


class FinishReason(Enum):
    """The possible reasons for a completion to finish."""

    DONE = "stop"
    """The full completion was generated."""
    FUNCTION_CALL = "function_call"
    """The model is has called a function."""
    LIMIT_REACHED = "length"
    """The token limit or maximum completion tokens was reached."""
    FILTERED = "content_filter"
    """Completion content omitted due to content filter."""
    CANCELED = "canceled"
    """The completion was canceled by the user."""
    UNDEFINED = "null"
    """The completion is still in progress or incomplete."""

    @property
    @classmethod
    def values(cls):
        """The values of the finish reasons."""
        return list(map(lambda c: c.value, cls))


class ChatModel(Enum):
    """The supported GPT models."""

    CHATGPT = "gpt-3.5-turbo"
    CHATGPT_16K = "gpt-3.5-turbo-16k"
    GPT4 = "gpt-4"
    GPT4_32K = "gpt-4-32k"

    @property
    @classmethod
    def values(cls):
        """List of all supported model."""
        return list(map(lambda c: c.value, cls))


class Message(Serializable, ABC):
    """A message generated by or sent to a chat model."""

    @abstractmethod
    def to_message_dict(self) -> dict:
        """Get the message as a dictionary for use in generation requests."""


class ModelReply(Message, ABC):
    """A reply to a message in a chat."""

    role: ReplyRole
    """The role of the message sender."""
    finish_reason: FinishReason = FinishReason.UNDEFINED
    """The finish reason of the reply generation."""
    prompt_tokens: int = 0
    """The number of tokens in the prompt provided."""
    reply_tokens: int = 0
    """The number of tokens in the reply generated."""
